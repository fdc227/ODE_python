double theta=state_var[0]
double phi=state_var[1]
double psi=state_var[2]
double X=state_var[3]
double Y=state_var[4]
double Z=state_var[5]
double p10_b=state_var[6]
double p9_b=state_var[7]
double p8_b=state_var[8]
double p7_b=state_var[9]
double p6_b=state_var[10]
double p5_b=state_var[11]
double p4_b=state_var[12]
double p3_b=state_var[13]
double p2_b=state_var[14]
double p1_b=state_var[15]
double q1_b=state_var[16]
double q2_b=state_var[17]
double q3_b=state_var[18]
double q4_b=state_var[19]
double q5_b=state_var[20]
double q6_b=state_var[21]
double q7_b=state_var[22]
double q8_b=state_var[23]
double q9_b=state_var[24]
double q10_b=state_var[25]
double p10_b_dot=state_var[26]
double p9_b_dot=state_var[27]
double p8_b_dot=state_var[28]
double p7_b_dot=state_var[29]
double p6_b_dot=state_var[30]
double p5_b_dot=state_var[31]
double p4_b_dot=state_var[32]
double p3_b_dot=state_var[33]
double p2_b_dot=state_var[34]
double p1_b_dot=state_var[35]
double q1_b_dot=state_var[36]
double q2_b_dot=state_var[37]
double q3_b_dot=state_var[38]
double q4_b_dot=state_var[39]
double q5_b_dot=state_var[40]
double q6_b_dot=state_var[41]
double q7_b_dot=state_var[42]
double q8_b_dot=state_var[43]
double q9_b_dot=state_var[44]
double q10_b_dot=state_var[45]
double p10_t=state_var[46]
double p9_t=state_var[47]
double p8_t=state_var[48]
double p7_t=state_var[49]
double p6_t=state_var[50]
double p5_t=state_var[51]
double p4_t=state_var[52]
double p3_t=state_var[53]
double p2_t=state_var[54]
double p1_t=state_var[55]
double q1_t=state_var[56]
double q2_t=state_var[57]
double q3_t=state_var[58]
double q4_t=state_var[59]
double q5_t=state_var[60]
double q6_t=state_var[61]
double q7_t=state_var[62]
double q8_t=state_var[63]
double q9_t=state_var[64]
double q10_t=state_var[65]
double p10_i=state_var[66]
double p9_i=state_var[67]
double p8_i=state_var[68]
double p7_i=state_var[69]
double p6_i=state_var[70]
double p5_i=state_var[71]
double p4_i=state_var[72]
double p3_i=state_var[73]
double p2_i=state_var[74]
double p1_i=state_var[75]
double q1_i=state_var[76]
double q2_i=state_var[77]
double q3_i=state_var[78]
double q4_i=state_var[79]
double q5_i=state_var[80]
double q6_i=state_var[81]
double q7_i=state_var[82]
double q8_i=state_var[83]
double q9_i=state_var[84]
double q10_i=state_var[85]
double p10_i_dot=state_var[86]
double p9_i_dot=state_var[87]
double p8_i_dot=state_var[88]
double p7_i_dot=state_var[89]
double p6_i_dot=state_var[90]
double p5_i_dot=state_var[91]
double p4_i_dot=state_var[92]
double p3_i_dot=state_var[93]
double p2_i_dot=state_var[94]
double p1_i_dot=state_var[95]
double q1_i_dot=state_var[96]
double q2_i_dot=state_var[97]
double q3_i_dot=state_var[98]
double q4_i_dot=state_var[99]
double q5_i_dot=state_var[100]
double q6_i_dot=state_var[101]
double q7_i_dot=state_var[102]
double q8_i_dot=state_var[103]
double q9_i_dot=state_var[104]
double q10_i_dot=state_var[105]
double theta_dt=state_var[106]
double phi_dt=state_var[107]
double psi_dt=state_var[108]
double X_dt=state_var[109]
double Y_dt=state_var[110]
double Z_dt=state_var[111]
double p10_b_dt=state_var[112]
double p9_b_dt=state_var[113]
double p8_b_dt=state_var[114]
double p7_b_dt=state_var[115]
double p6_b_dt=state_var[116]
double p5_b_dt=state_var[117]
double p4_b_dt=state_var[118]
double p3_b_dt=state_var[119]
double p2_b_dt=state_var[120]
double p1_b_dt=state_var[121]
double q1_b_dt=state_var[122]
double q2_b_dt=state_var[123]
double q3_b_dt=state_var[124]
double q4_b_dt=state_var[125]
double q5_b_dt=state_var[126]
double q6_b_dt=state_var[127]
double q7_b_dt=state_var[128]
double q8_b_dt=state_var[129]
double q9_b_dt=state_var[130]
double q10_b_dt=state_var[131]
double p10_b_dot_dt=state_var[132]
double p9_b_dot_dt=state_var[133]
double p8_b_dot_dt=state_var[134]
double p7_b_dot_dt=state_var[135]
double p6_b_dot_dt=state_var[136]
double p5_b_dot_dt=state_var[137]
double p4_b_dot_dt=state_var[138]
double p3_b_dot_dt=state_var[139]
double p2_b_dot_dt=state_var[140]
double p1_b_dot_dt=state_var[141]
double q1_b_dot_dt=state_var[142]
double q2_b_dot_dt=state_var[143]
double q3_b_dot_dt=state_var[144]
double q4_b_dot_dt=state_var[145]
double q5_b_dot_dt=state_var[146]
double q6_b_dot_dt=state_var[147]
double q7_b_dot_dt=state_var[148]
double q8_b_dot_dt=state_var[149]
double q9_b_dot_dt=state_var[150]
double q10_b_dot_dt=state_var[151]
double p10_t_dt=state_var[152]
double p9_t_dt=state_var[153]
double p8_t_dt=state_var[154]
double p7_t_dt=state_var[155]
double p6_t_dt=state_var[156]
double p5_t_dt=state_var[157]
double p4_t_dt=state_var[158]
double p3_t_dt=state_var[159]
double p2_t_dt=state_var[160]
double p1_t_dt=state_var[161]
double q1_t_dt=state_var[162]
double q2_t_dt=state_var[163]
double q3_t_dt=state_var[164]
double q4_t_dt=state_var[165]
double q5_t_dt=state_var[166]
double q6_t_dt=state_var[167]
double q7_t_dt=state_var[168]
double q8_t_dt=state_var[169]
double q9_t_dt=state_var[170]
double q10_t_dt=state_var[171]
double p10_i_dt=state_var[172]
double p9_i_dt=state_var[173]
double p8_i_dt=state_var[174]
double p7_i_dt=state_var[175]
double p6_i_dt=state_var[176]
double p5_i_dt=state_var[177]
double p4_i_dt=state_var[178]
double p3_i_dt=state_var[179]
double p2_i_dt=state_var[180]
double p1_i_dt=state_var[181]
double q1_i_dt=state_var[182]
double q2_i_dt=state_var[183]
double q3_i_dt=state_var[184]
double q4_i_dt=state_var[185]
double q5_i_dt=state_var[186]
double q6_i_dt=state_var[187]
double q7_i_dt=state_var[188]
double q8_i_dt=state_var[189]
double q9_i_dt=state_var[190]
double q10_i_dt=state_var[191]
double p10_i_dot_dt=state_var[192]
double p9_i_dot_dt=state_var[193]
double p8_i_dot_dt=state_var[194]
double p7_i_dot_dt=state_var[195]
double p6_i_dot_dt=state_var[196]
double p5_i_dot_dt=state_var[197]
double p4_i_dot_dt=state_var[198]
double p3_i_dot_dt=state_var[199]
double p2_i_dot_dt=state_var[200]
double p1_i_dot_dt=state_var[201]
double q1_i_dot_dt=state_var[202]
double q2_i_dot_dt=state_var[203]
double q3_i_dot_dt=state_var[204]
double q4_i_dot_dt=state_var[205]
double q5_i_dot_dt=state_var[206]
double q6_i_dot_dt=state_var[207]
double q7_i_dot_dt=state_var[208]
double q8_i_dot_dt=state_var[209]
double q9_i_dot_dt=state_var[210]
double q10_i_dot_dt=state_var[211]
double x0 = pow(L, -3);
double x1 = A*E;
double x2 = 72*x1;
double x3 = p10_b*x2;
double x4 = p9_b*x2;
double x5 = L*x1;
double x6 = p10_b_dot*x5;
double x7 = 42*x6;
double x8 = p9_b_dot*x5;
double x9 = 30*x8;
double x10 = 36*x1;
double x11 = p10_b*x10;
double x12 = p9_b*x10;
double x13 = -x12;
double x14 = 24*x6;
double x15 = 12*x8;
double x16 = 48*x1;
double x17 = p10_b*x16;
double x18 = p9_b*x16;
double x19 = -x18;
double x20 = 24*x8;
double x21 = -x14;
double x22 = -x20;
double x23 = -x4;
double x24 = p8_b*x2;
double x25 = p8_b_dot*x5;
double x26 = 30*x25;
double x27 = 42*x8;
double x28 = p8_b*x10;
double x29 = -x28;
double x30 = 12*x25;
double x31 = p8_b*x16;
double x32 = -x31;
double x33 = 24*x25;
double x34 = p7_b*x2;
double x35 = -x24;
double x36 = p7_b_dot*x5;
double x37 = 30*x36;
double x38 = 42*x25;
double x39 = p7_b*x10;
double x40 = -x39;
double x41 = 12*x36;
double x42 = p7_b*x16;
double x43 = -x42;
double x44 = 24*x36;
double x45 = -x33;
double x46 = p6_b*x2;
double x47 = -x34;
double x48 = p6_b_dot*x5;
double x49 = 30*x48;
double x50 = 42*x36;
double x51 = p6_b*x10;
double x52 = -x51;
double x53 = 12*x48;
double x54 = p6_b*x16;
double x55 = -x54;
double x56 = 24*x48;
double x57 = -x44;
double x58 = p5_b*x2;
double x59 = -x46;
double x60 = p5_b_dot*x5;
double x61 = 30*x60;
double x62 = 42*x48;
double x63 = p5_b*x10;
double x64 = -x63;
double x65 = 12*x60;
double x66 = p5_b*x16;
double x67 = -x66;
double x68 = 24*x60;
double x69 = -x56;
double x70 = p4_b*x2;
double x71 = -x58;
double x72 = p4_b_dot*x5;
double x73 = 30*x72;
double x74 = 42*x60;
double x75 = p4_b*x10;
double x76 = -x75;
double x77 = 12*x72;
double x78 = p4_b*x16;
double x79 = -x78;
double x80 = 24*x72;
double x81 = -x68;
double x82 = p3_b*x2;
double x83 = -x70;
double x84 = p3_b_dot*x5;
double x85 = 30*x84;
double x86 = 42*x72;
double x87 = p3_b*x10;
double x88 = -x87;
double x89 = 12*x84;
double x90 = p3_b*x16;
double x91 = -x90;
double x92 = 24*x84;
double x93 = -x80;
double x94 = p2_b*x2;
double x95 = -x82;
double x96 = p2_b_dot*x5;
double x97 = 30*x96;
double x98 = 42*x84;
double x99 = p2_b*x10;
double x100 = -x99;
double x101 = 12*x96;
double x102 = p2_b*x16;
double x103 = -x102;
double x104 = 24*x96;
double x105 = -x92;
double x106 = p1_b*x2;
double x107 = -x94;
double x108 = p1_b_dot*x5;
double x109 = 30*x108;
double x110 = 42*x96;
double x111 = p1_b*x10;
double x112 = 12*x108;
double x113 = p1_b*x16;
double x114 = 24*x108;
double x115 = -x104;
double x116 = -x106;
double x117 = q1_b*x16;
double x118 = q1_b_dot*x5;
double x119 = 24*x118;
double x120 = -x119;
double x121 = q1_b*x10;
double x122 = q1_b*x2;
double x123 = -x122;
double x124 = q2_b*x2;
double x125 = 42*x118;
double x126 = q2_b_dot*x5;
double x127 = 30*x126;
double x128 = q2_b*x10;
double x129 = -x128;
double x130 = 12*x126;
double x131 = q2_b*x16;
double x132 = -x131;
double x133 = 24*x126;
double x134 = -x133;
double x135 = -x124;
double x136 = q3_b*x2;
double x137 = 42*x126;
double x138 = q3_b_dot*x5;
double x139 = 30*x138;
double x140 = q3_b*x10;
double x141 = -x140;
double x142 = 12*x138;
double x143 = q3_b*x16;
double x144 = -x143;
double x145 = 24*x138;
double x146 = -x145;
double x147 = -x136;
double x148 = q4_b*x2;
double x149 = 42*x138;
double x150 = q4_b_dot*x5;
double x151 = 30*x150;
double x152 = q4_b*x10;
double x153 = -x152;
double x154 = 12*x150;
double x155 = q4_b*x16;
double x156 = -x155;
double x157 = 24*x150;
double x158 = -x157;
double x159 = -x148;
double x160 = q5_b*x2;
double x161 = 42*x150;
double x162 = q5_b_dot*x5;
double x163 = 30*x162;
double x164 = q5_b*x10;
double x165 = -x164;
double x166 = 12*x162;
double x167 = q5_b*x16;
double x168 = -x167;
double x169 = 24*x162;
double x170 = -x169;
double x171 = -x160;
double x172 = q6_b*x2;
double x173 = 42*x162;
double x174 = q6_b_dot*x5;
double x175 = 30*x174;
double x176 = q6_b*x10;
double x177 = -x176;
double x178 = 12*x174;
double x179 = q6_b*x16;
double x180 = -x179;
double x181 = 24*x174;
double x182 = -x181;
double x183 = -x172;
double x184 = q7_b*x2;
double x185 = 42*x174;
double x186 = q7_b_dot*x5;
double x187 = 30*x186;
double x188 = q7_b*x10;
double x189 = -x188;
double x190 = 12*x186;
double x191 = q7_b*x16;
double x192 = -x191;
double x193 = 24*x186;
double x194 = -x193;
double x195 = -x184;
double x196 = q8_b*x2;
double x197 = 42*x186;
double x198 = q8_b_dot*x5;
double x199 = 30*x198;
double x200 = q8_b*x10;
double x201 = -x200;
double x202 = 12*x198;
double x203 = q8_b*x16;
double x204 = -x203;
double x205 = 24*x198;
double x206 = -x205;
double x207 = -x196;
double x208 = q9_b*x2;
double x209 = 42*x198;
double x210 = q9_b_dot*x5;
double x211 = 30*x210;
double x212 = q9_b*x10;
double x213 = -x212;
double x214 = 12*x210;
double x215 = q9_b*x16;
double x216 = -x215;
double x217 = 24*x210;
double x218 = q10_b*x2;
double x219 = -x208;
double x220 = q10_b_dot*x5;
double x221 = 30*x220;
double x222 = 42*x210;
double x223 = q10_b*x10;
double x224 = 12*x220;
double x225 = q10_b*x16;
double x226 = 24*x220;
double x227 = -x217;
double x228 = 42*x5;
double x229 = p9_b*x228;
double x230 = pow(L, 2)*x1;
double x231 = p10_b_dot*x230;
double x232 = p9_b_dot*x230;
double x233 = -18*x232;
double x234 = 12*x232;
double x235 = 24*x5;
double x236 = p9_b*x235;
double x237 = p10_b*x235 - x236;
double x238 = x0*(12*x231 + x234 + x237);
double x239 = 8*x232;
double x240 = 30*x5;
double x241 = p9_b*x240;
double x242 = 12*x5;
double x243 = p9_b*x242;
double x244 = p8_b*x228;
double x245 = p8_b_dot*x230;
double x246 = -18*x245;
double x247 = 8*x245;
double x248 = p8_b*x235;
double x249 = x236 - x248;
double x250 = 12*x245;
double x251 = x0*(x234 + x249 + x250);
double x252 = p7_b*x228;
double x253 = p7_b_dot*x230;
double x254 = -18*x253;
double x255 = 8*x253;
double x256 = p7_b*x235;
double x257 = x248 - x256;
double x258 = 12*x253;
double x259 = x0*(x250 + x257 + x258);
double x260 = p8_b*x240;
double x261 = p8_b*x242;
double x262 = p6_b*x228;
double x263 = p6_b_dot*x230;
double x264 = -18*x263;
double x265 = 8*x263;
double x266 = p6_b*x235;
double x267 = x256 - x266;
double x268 = 12*x263;
double x269 = x0*(x258 + x267 + x268);
double x270 = p7_b*x240;
double x271 = p7_b*x242;
double x272 = p5_b*x228;
double x273 = p5_b_dot*x230;
double x274 = -18*x273;
double x275 = 8*x273;
double x276 = p5_b*x235;
double x277 = x266 - x276;
double x278 = 12*x273;
double x279 = x0*(x268 + x277 + x278);
double x280 = p6_b*x240;
double x281 = p6_b*x242;
double x282 = p4_b*x228;
double x283 = p4_b_dot*x230;
double x284 = -18*x283;
double x285 = 8*x283;
double x286 = p4_b*x235;
double x287 = x276 - x286;
double x288 = 12*x283;
double x289 = x0*(x278 + x287 + x288);
double x290 = p5_b*x240;
double x291 = p5_b*x242;
double x292 = p3_b*x228;
double x293 = p3_b_dot*x230;
double x294 = -18*x293;
double x295 = 8*x293;
double x296 = p3_b*x235;
double x297 = x286 - x296;
double x298 = 12*x293;
double x299 = x0*(x288 + x297 + x298);
double x300 = p4_b*x240;
double x301 = p4_b*x242;
double x302 = p2_b*x228;
double x303 = p2_b_dot*x230;
double x304 = -18*x303;
double x305 = 8*x303;
double x306 = p2_b*x235;
double x307 = x296 - x306;
double x308 = 12*x303;
double x309 = x0*(x298 + x307 + x308);
double x310 = p3_b*x240;
double x311 = p3_b*x242;
double x312 = p1_b*x228;
double x313 = p1_b_dot*x230;
double x314 = p1_b*x235;
double x315 = x306 - x314;
double x316 = 12*x313;
double x317 = x0*(x308 + x315 + x316);
double x318 = p2_b*x240;
double x319 = p2_b*x242;
double x320 = q1_b*x240;
double x321 = q1_b_dot*x230;
double x322 = 12*x321;
double x323 = q1_b*x242;
double x324 = q1_b*x235;
double x325 = q2_b*x228;
double x326 = q2_b_dot*x230;
double x327 = -18*x326;
double x328 = 12*x326;
double x329 = q2_b*x235;
double x330 = x324 - x329;
double x331 = x0*(x322 + x328 + x330);
double x332 = 8*x326;
double x333 = q2_b*x240;
double x334 = q2_b*x242;
double x335 = q3_b*x228;
double x336 = q3_b_dot*x230;
double x337 = -18*x336;
double x338 = 12*x336;
double x339 = q3_b*x235;
double x340 = x329 - x339;
double x341 = x0*(x328 + x338 + x340);
double x342 = 8*x336;
double x343 = q3_b*x240;
double x344 = q3_b*x242;
double x345 = q4_b*x228;
double x346 = q4_b_dot*x230;
double x347 = -18*x346;
double x348 = 12*x346;
double x349 = q4_b*x235;
double x350 = x339 - x349;
double x351 = x0*(x338 + x348 + x350);
double x352 = 8*x346;
double x353 = q4_b*x240;
double x354 = q4_b*x242;
double x355 = q5_b*x228;
double x356 = q5_b_dot*x230;
double x357 = -18*x356;
double x358 = 12*x356;
double x359 = q5_b*x235;
double x360 = x349 - x359;
double x361 = x0*(x348 + x358 + x360);
double x362 = 8*x356;
double x363 = q5_b*x240;
double x364 = q5_b*x242;
double x365 = q6_b*x228;
double x366 = q6_b_dot*x230;
double x367 = -18*x366;
double x368 = 12*x366;
double x369 = q6_b*x235;
double x370 = x359 - x369;
double x371 = x0*(x358 + x368 + x370);
double x372 = 8*x366;
double x373 = q6_b*x240;
double x374 = q6_b*x242;
double x375 = q7_b*x228;
double x376 = q7_b_dot*x230;
double x377 = -18*x376;
double x378 = 12*x376;
double x379 = q7_b*x235;
double x380 = x369 - x379;
double x381 = x0*(x368 + x378 + x380);
double x382 = 8*x376;
double x383 = q7_b*x240;
double x384 = q7_b*x242;
double x385 = q8_b*x228;
double x386 = q8_b_dot*x230;
double x387 = -18*x386;
double x388 = 12*x386;
double x389 = q8_b*x235;
double x390 = x379 - x389;
double x391 = x0*(x378 + x388 + x390);
double x392 = 8*x386;
double x393 = q8_b*x240;
double x394 = q8_b*x242;
double x395 = q9_b*x228;
double x396 = q9_b_dot*x230;
double x397 = -18*x396;
double x398 = 12*x396;
double x399 = q9_b*x235;
double x400 = x389 - x399;
double x401 = x0*(x388 + x398 + x400);
double x402 = 8*x396;
double x403 = q10_b_dot*x230;
double x404 = -q10_b*x235 + x399;
double x405 = 12*x403;
double x406 = x0*(x398 + x404 + x405);
double x407 = q9_b*x240;
double x408 = q9_b*x242;
double x409 = 1.0/L;
double x410 = p9_t*x409;
double x411 = G*J;
double x412 = x411*(-p10_t*x409 + x410);
double x413 = p8_t*x409;
double x414 = x411*(-x410 + x413);
double x415 = p7_t*x409;
double x416 = x411*(-x413 + x415);
double x417 = p6_t*x409;
double x418 = x411*(-x415 + x417);
double x419 = p5_t*x409;
double x420 = x411*(-x417 + x419);
double x421 = p4_t*x409;
double x422 = x411*(-x419 + x421);
double x423 = p3_t*x409;
double x424 = x411*(-x421 + x423);
double x425 = p2_t*x409;
double x426 = x411*(-x423 + x425);
double x427 = p1_t*x409;
double x428 = x411*(-x425 + x427);
double x429 = q1_t*x409;
double x430 = q2_t*x409;
double x431 = x411*(-x429 + x430);
double x432 = q3_t*x409;
double x433 = x411*(-x430 + x432);
double x434 = q4_t*x409;
double x435 = x411*(-x432 + x434);
double x436 = q5_t*x409;
double x437 = x411*(-x434 + x436);
double x438 = q6_t*x409;
double x439 = x411*(-x436 + x438);
double x440 = q7_t*x409;
double x441 = x411*(-x438 + x440);
double x442 = q8_t*x409;
double x443 = x411*(-x440 + x442);
double x444 = q9_t*x409;
double x445 = x411*(-x442 + x444);
double x446 = x411*(q10_t*x409 - x444);
double x447 = p10_i*x2;
double x448 = p9_i*x2;
double x449 = p10_i_dot*x228;
double x450 = p9_i_dot*x240;
double x451 = p10_i*x10;
double x452 = p9_i*x10;
double x453 = -x452;
double x454 = p10_i_dot*x235;
double x455 = p9_i_dot*x242;
double x456 = p10_i*x16;
double x457 = p9_i*x16;
double x458 = -x457;
double x459 = p9_i_dot*x235;
double x460 = -x454;
double x461 = -x459;
double x462 = -x448;
double x463 = p8_i*x2;
double x464 = p8_i_dot*x240;
double x465 = p9_i_dot*x228;
double x466 = p8_i*x10;
double x467 = -x466;
double x468 = p8_i_dot*x242;
double x469 = p8_i*x16;
double x470 = -x469;
double x471 = p8_i_dot*x235;
double x472 = p7_i*x2;
double x473 = -x463;
double x474 = p7_i_dot*x240;
double x475 = p8_i_dot*x228;
double x476 = p7_i*x10;
double x477 = -x476;
double x478 = p7_i_dot*x242;
double x479 = p7_i*x16;
double x480 = -x479;
double x481 = p7_i_dot*x235;
double x482 = -x471;
double x483 = p6_i*x2;
double x484 = -x472;
double x485 = p6_i_dot*x240;
double x486 = p7_i_dot*x228;
double x487 = p6_i*x10;
double x488 = -x487;
double x489 = p6_i_dot*x242;
double x490 = p6_i*x16;
double x491 = -x490;
double x492 = p6_i_dot*x235;
double x493 = -x481;
double x494 = p5_i*x2;
double x495 = -x483;
double x496 = p5_i_dot*x240;
double x497 = p6_i_dot*x228;
double x498 = p5_i*x10;
double x499 = -x498;
double x500 = p5_i_dot*x242;
double x501 = p5_i*x16;
double x502 = -x501;
double x503 = p5_i_dot*x235;
double x504 = -x492;
double x505 = p4_i*x2;
double x506 = -x494;
double x507 = p4_i_dot*x240;
double x508 = p5_i_dot*x228;
double x509 = p4_i*x10;
double x510 = -x509;
double x511 = p4_i_dot*x242;
double x512 = p4_i*x16;
double x513 = -x512;
double x514 = p4_i_dot*x235;
double x515 = -x503;
double x516 = p3_i*x2;
double x517 = -x505;
double x518 = p3_i_dot*x240;
double x519 = p4_i_dot*x228;
double x520 = p3_i*x10;
double x521 = -x520;
double x522 = p3_i_dot*x242;
double x523 = p3_i*x16;
double x524 = -x523;
double x525 = p3_i_dot*x235;
double x526 = -x514;
double x527 = p2_i*x2;
double x528 = -x516;
double x529 = p2_i_dot*x240;
double x530 = p3_i_dot*x228;
double x531 = p2_i*x10;
double x532 = -x531;
double x533 = p2_i_dot*x242;
double x534 = p2_i*x16;
double x535 = -x534;
double x536 = p2_i_dot*x235;
double x537 = -x525;
double x538 = p1_i*x2;
double x539 = -x527;
double x540 = p1_i_dot*x240;
double x541 = p2_i_dot*x228;
double x542 = p1_i*x10;
double x543 = p1_i_dot*x242;
double x544 = p1_i*x16;
double x545 = p1_i_dot*x235;
double x546 = -x536;
double x547 = -x538;
double x548 = q1_i*x16;
double x549 = q1_i_dot*x235;
double x550 = -x549;
double x551 = q1_i*x10;
double x552 = q1_i*x2;
double x553 = -x552;
double x554 = q2_i*x2;
double x555 = q1_i_dot*x228;
double x556 = q2_i_dot*x240;
double x557 = q2_i*x10;
double x558 = -x557;
double x559 = q2_i_dot*x242;
double x560 = q2_i*x16;
double x561 = -x560;
double x562 = q2_i_dot*x235;
double x563 = -x562;
double x564 = -x554;
double x565 = q3_i*x2;
double x566 = q2_i_dot*x228;
double x567 = q3_i_dot*x240;
double x568 = q3_i*x10;
double x569 = -x568;
double x570 = q3_i_dot*x242;
double x571 = q3_i*x16;
double x572 = -x571;
double x573 = q3_i_dot*x235;
double x574 = -x573;
double x575 = -x565;
double x576 = q4_i*x2;
double x577 = q3_i_dot*x228;
double x578 = q4_i_dot*x240;
double x579 = q4_i*x10;
double x580 = -x579;
double x581 = q4_i_dot*x242;
double x582 = q4_i*x16;
double x583 = -x582;
double x584 = q4_i_dot*x235;
double x585 = -x584;
double x586 = -x576;
double x587 = q5_i*x2;
double x588 = q4_i_dot*x228;
double x589 = q5_i_dot*x240;
double x590 = q5_i*x10;
double x591 = -x590;
double x592 = q5_i_dot*x242;
double x593 = q5_i*x16;
double x594 = -x593;
double x595 = q5_i_dot*x235;
double x596 = -x595;
double x597 = -x587;
double x598 = q6_i*x2;
double x599 = q5_i_dot*x228;
double x600 = q6_i_dot*x240;
double x601 = q6_i*x10;
double x602 = -x601;
double x603 = q6_i_dot*x242;
double x604 = q6_i*x16;
double x605 = -x604;
double x606 = q6_i_dot*x235;
double x607 = -x606;
double x608 = -x598;
double x609 = q7_i*x2;
double x610 = q6_i_dot*x228;
double x611 = q7_i_dot*x240;
double x612 = q7_i*x10;
double x613 = -x612;
double x614 = q7_i_dot*x242;
double x615 = q7_i*x16;
double x616 = -x615;
double x617 = q7_i_dot*x235;
double x618 = -x617;
double x619 = -x609;
double x620 = q8_i*x2;
double x621 = q7_i_dot*x228;
double x622 = q8_i_dot*x240;
double x623 = q8_i*x10;
double x624 = -x623;
double x625 = q8_i_dot*x242;
double x626 = q8_i*x16;
double x627 = -x626;
double x628 = q8_i_dot*x235;
double x629 = -x628;
double x630 = -x620;
double x631 = q9_i*x2;
double x632 = q8_i_dot*x228;
double x633 = q9_i_dot*x240;
double x634 = q9_i*x10;
double x635 = -x634;
double x636 = q9_i_dot*x242;
double x637 = q9_i*x16;
double x638 = -x637;
double x639 = q9_i_dot*x235;
double x640 = q10_i*x2;
double x641 = -x631;
double x642 = q10_i_dot*x240;
double x643 = q9_i_dot*x228;
double x644 = q10_i*x10;
double x645 = q10_i_dot*x242;
double x646 = q10_i*x16;
double x647 = q10_i_dot*x235;
double x648 = -x639;
double x649 = p9_i*x228;
double x650 = p10_i_dot*x230;
double x651 = p9_i_dot*x230;
double x652 = -18*x651;
double x653 = 12*x651;
double x654 = p9_i*x235;
double x655 = p10_i*x235 - x654;
double x656 = x0*(12*x650 + x653 + x655);
double x657 = 8*x651;
double x658 = p9_i*x240;
double x659 = p9_i*x242;
double x660 = p8_i*x228;
double x661 = p8_i_dot*x230;
double x662 = -18*x661;
double x663 = 8*x661;
double x664 = p8_i*x235;
double x665 = x654 - x664;
double x666 = 12*x661;
double x667 = x0*(x653 + x665 + x666);
double x668 = p7_i*x228;
double x669 = p7_i_dot*x230;
double x670 = -18*x669;
double x671 = 8*x669;
double x672 = p7_i*x235;
double x673 = x664 - x672;
double x674 = 12*x669;
double x675 = x0*(x666 + x673 + x674);
double x676 = p8_i*x240;
double x677 = p8_i*x242;
double x678 = p6_i*x228;
double x679 = p6_i_dot*x230;
double x680 = -18*x679;
double x681 = 8*x679;
double x682 = p6_i*x235;
double x683 = x672 - x682;
double x684 = 12*x679;
double x685 = x0*(x674 + x683 + x684);
double x686 = p7_i*x240;
double x687 = p7_i*x242;
double x688 = p5_i*x228;
double x689 = p5_i_dot*x230;
double x690 = -18*x689;
double x691 = 8*x689;
double x692 = p5_i*x235;
double x693 = x682 - x692;
double x694 = 12*x689;
double x695 = x0*(x684 + x693 + x694);
double x696 = p6_i*x240;
double x697 = p6_i*x242;
double x698 = p4_i*x228;
double x699 = p4_i_dot*x230;
double x700 = -18*x699;
double x701 = 8*x699;
double x702 = p4_i*x235;
double x703 = x692 - x702;
double x704 = 12*x699;
double x705 = x0*(x694 + x703 + x704);
double x706 = p5_i*x240;
double x707 = p5_i*x242;
double x708 = p3_i*x228;
double x709 = p3_i_dot*x230;
double x710 = -18*x709;
double x711 = 8*x709;
double x712 = p3_i*x235;
double x713 = x702 - x712;
double x714 = 12*x709;
double x715 = x0*(x704 + x713 + x714);
double x716 = p4_i*x240;
double x717 = p4_i*x242;
double x718 = p2_i*x228;
double x719 = p2_i_dot*x230;
double x720 = -18*x719;
double x721 = 8*x719;
double x722 = p2_i*x235;
double x723 = x712 - x722;
double x724 = 12*x719;
double x725 = x0*(x714 + x723 + x724);
double x726 = p3_i*x240;
double x727 = p3_i*x242;
double x728 = p1_i*x228;
double x729 = p1_i_dot*x230;
double x730 = p1_i*x235;
double x731 = x722 - x730;
double x732 = 12*x729;
double x733 = x0*(x724 + x731 + x732);
double x734 = p2_i*x240;
double x735 = p2_i*x242;
double x736 = q1_i*x240;
double x737 = q1_i_dot*x230;
double x738 = 12*x737;
double x739 = q1_i*x242;
double x740 = q1_i*x235;
double x741 = q2_i*x228;
double x742 = q2_i_dot*x230;
double x743 = -18*x742;
double x744 = 12*x742;
double x745 = q2_i*x235;
double x746 = x740 - x745;
double x747 = x0*(x738 + x744 + x746);
double x748 = 8*x742;
double x749 = q2_i*x240;
double x750 = q2_i*x242;
double x751 = q3_i*x228;
double x752 = q3_i_dot*x230;
double x753 = -18*x752;
double x754 = 12*x752;
double x755 = q3_i*x235;
double x756 = x745 - x755;
double x757 = x0*(x744 + x754 + x756);
double x758 = 8*x752;
double x759 = q3_i*x240;
double x760 = q3_i*x242;
double x761 = q4_i*x228;
double x762 = q4_i_dot*x230;
double x763 = -18*x762;
double x764 = 12*x762;
double x765 = q4_i*x235;
double x766 = x755 - x765;
double x767 = x0*(x754 + x764 + x766);
double x768 = 8*x762;
double x769 = q4_i*x240;
double x770 = q4_i*x242;
double x771 = q5_i*x228;
double x772 = q5_i_dot*x230;
double x773 = -18*x772;
double x774 = 12*x772;
double x775 = q5_i*x235;
double x776 = x765 - x775;
double x777 = x0*(x764 + x774 + x776);
double x778 = 8*x772;
double x779 = q5_i*x240;
double x780 = q5_i*x242;
double x781 = q6_i*x228;
double x782 = q6_i_dot*x230;
double x783 = -18*x782;
double x784 = 12*x782;
double x785 = q6_i*x235;
double x786 = x775 - x785;
double x787 = x0*(x774 + x784 + x786);
double x788 = 8*x782;
double x789 = q6_i*x240;
double x790 = q6_i*x242;
double x791 = q7_i*x228;
double x792 = q7_i_dot*x230;
double x793 = -18*x792;
double x794 = 12*x792;
double x795 = q7_i*x235;
double x796 = x785 - x795;
double x797 = x0*(x784 + x794 + x796);
double x798 = 8*x792;
double x799 = q7_i*x240;
double x800 = q7_i*x242;
double x801 = q8_i*x228;
double x802 = q8_i_dot*x230;
double x803 = -18*x802;
double x804 = 12*x802;
double x805 = q8_i*x235;
double x806 = x795 - x805;
double x807 = x0*(x794 + x804 + x806);
double x808 = 8*x802;
double x809 = q8_i*x240;
double x810 = q8_i*x242;
double x811 = q9_i*x228;
double x812 = q9_i_dot*x230;
double x813 = -18*x812;
double x814 = 12*x812;
double x815 = q9_i*x235;
double x816 = x805 - x815;
double x817 = x0*(x804 + x814 + x816);
double x818 = 8*x812;
double x819 = q10_i_dot*x230;
double x820 = -q10_i*x235 + x815;
double x821 = 12*x819;
double x822 = x0*(x814 + x820 + x821);
double x823 = q9_i*x240;
double x824 = q9_i*x242;
strain_terms[0] = 0;
strain_terms[1] = 0;
strain_terms[2] = 0;
strain_terms[3] = 0;
strain_terms[4] = 0;
strain_terms[5] = 0;
strain_terms[6] = x0*(x11 + x13 + x14 + x15) + x0*(x14 + x17 + x19 + x20) + x0*(-x3 + x4 - x7 - x9);
strain_terms[7] = x0*(-x11 + x12 - x15 + x21) + x0*(x12 + x20 + x29 + x30) + x0*(-x17 + x18 + x21 + x22) + x0*(x18 + x20 + x32 + x33) + x0*(x23 + x24 - x26 - x27) + x0*(x23 + x3 + x7 + x9);
strain_terms[8] = x0*(x13 + x22 + x28 - x30) + x0*(x19 + x22 + x31 + x45) + x0*(x26 + x27 + x35 + x4) + x0*(x28 + x33 + x40 + x41) + x0*(x31 + x33 + x43 + x44) + x0*(x34 + x35 - x37 - x38);
strain_terms[9] = x0*(x24 + x37 + x38 + x47) + x0*(x29 + x39 - x41 + x45) + x0*(x32 + x42 + x45 + x57) + x0*(x39 + x44 + x52 + x53) + x0*(x42 + x44 + x55 + x56) + x0*(x46 + x47 - x49 - x50);
strain_terms[10] = x0*(x34 + x49 + x50 + x59) + x0*(x40 + x51 - x53 + x57) + x0*(x43 + x54 + x57 + x69) + x0*(x51 + x56 + x64 + x65) + x0*(x54 + x56 + x67 + x68) + x0*(x58 + x59 - x61 - x62);
strain_terms[11] = x0*(x46 + x61 + x62 + x71) + x0*(x52 + x63 - x65 + x69) + x0*(x55 + x66 + x69 + x81) + x0*(x63 + x68 + x76 + x77) + x0*(x66 + x68 + x79 + x80) + x0*(x70 + x71 - x73 - x74);
strain_terms[12] = x0*(x58 + x73 + x74 + x83) + x0*(x64 + x75 - x77 + x81) + x0*(x67 + x78 + x81 + x93) + x0*(x75 + x80 + x88 + x89) + x0*(x78 + x80 + x91 + x92) + x0*(x82 + x83 - x85 - x86);
strain_terms[13] = x0*(x100 + x101 + x87 + x92) + x0*(x103 + x104 + x90 + x92) + x0*(x105 + x79 + x90 + x93) + x0*(x70 + x85 + x86 + x95) + x0*(x76 + x87 - x89 + x93) + x0*(x94 + x95 - x97 - x98);
strain_terms[14] = x0*(-x101 + x105 + x88 + x99) + x0*(x102 + x104 - x113 + x114) + x0*(x102 + x105 + x115 + x91) + x0*(x104 - x111 + x112 + x99) + x0*(x106 + x107 - x109 - x110) + x0*(x107 + x82 + x97 + x98);
strain_terms[15] = x0*(-42*x108 + x116) + x0*(x111 + x114) + x0*(x113 + x114) + x0*(x100 + x111 - x112 + x115) + x0*(x103 + x113 - x114 + x115) + x0*(x109 + x110 + x116 + x94);
strain_terms[16] = x0*(x117 + x120) + x0*(-12*x118 + x121) + x0*(30*x118 + x123) + x0*(x117 + x119 + x132 + x133) + x0*(x119 + x121 + x129 + x130) + x0*(x123 + x124 - x125 - x127);
strain_terms[17] = x0*(-x117 + x120 + x131 + x134) + x0*(x120 - x121 + x128 - x130) + x0*(x122 + x125 + x127 + x135) + x0*(x128 + x133 + x141 + x142) + x0*(x131 + x133 + x144 + x145) + x0*(x135 + x136 - x137 - x139);
strain_terms[18] = x0*(x124 + x137 + x139 + x147) + x0*(x129 + x134 + x140 - x142) + x0*(x132 + x134 + x143 + x146) + x0*(x140 + x145 + x153 + x154) + x0*(x143 + x145 + x156 + x157) + x0*(x147 + x148 - x149 - x151);
strain_terms[19] = x0*(x136 + x149 + x151 + x159) + x0*(x141 + x146 + x152 - x154) + x0*(x144 + x146 + x155 + x158) + x0*(x152 + x157 + x165 + x166) + x0*(x155 + x157 + x168 + x169) + x0*(x159 + x160 - x161 - x163);
strain_terms[20] = x0*(x148 + x161 + x163 + x171) + x0*(x153 + x158 + x164 - x166) + x0*(x156 + x158 + x167 + x170) + x0*(x164 + x169 + x177 + x178) + x0*(x167 + x169 + x180 + x181) + x0*(x171 + x172 - x173 - x175);
strain_terms[21] = x0*(x160 + x173 + x175 + x183) + x0*(x165 + x170 + x176 - x178) + x0*(x168 + x170 + x179 + x182) + x0*(x176 + x181 + x189 + x190) + x0*(x179 + x181 + x192 + x193) + x0*(x183 + x184 - x185 - x187);
strain_terms[22] = x0*(x172 + x185 + x187 + x195) + x0*(x177 + x182 + x188 - x190) + x0*(x180 + x182 + x191 + x194) + x0*(x188 + x193 + x201 + x202) + x0*(x191 + x193 + x204 + x205) + x0*(x195 + x196 - x197 - x199);
strain_terms[23] = x0*(x184 + x197 + x199 + x207) + x0*(x189 + x194 + x200 - x202) + x0*(x192 + x194 + x203 + x206) + x0*(x200 + x205 + x213 + x214) + x0*(x203 + x205 + x216 + x217) + x0*(x207 + x208 - x209 - x211);
strain_terms[24] = x0*(x196 + x209 + x211 + x219) + x0*(x201 + x206 + x212 - x214) + x0*(x204 + x206 + x215 + x227) + x0*(x212 + x217 - x223 + x224) + x0*(x215 + x217 - x225 + x226) + x0*(x218 + x219 - x221 - x222);
strain_terms[25] = x0*(x208 - x218 + x221 + x222) + x0*(x213 + x223 - x224 + x227) + x0*(x216 + x225 - x226 + x227);
strain_terms[26] = x0*(16*x231 + x237 + x239) + x0*(-p10_b*x228 + x229 - 24*x231 + x233) + x238;
strain_terms[27] = x0*(16*x232 + x247 + x249) + x0*(-x229 - 24*x232 + x244 + x246) + x0*(-p10_b*x240 - 18*x231 - x234 + x241) + x0*(p10_b*x242 + 8*x231 + 4*x232 - x243) + x238 + x251;
strain_terms[28] = x0*(16*x245 + x255 + x257) + x0*(x233 - x241 - x250 + x260) + x0*(x239 + x243 + 4*x245 - x261) + x0*(-x244 - 24*x245 + x252 + x254) + x251 + x259;
strain_terms[29] = x0*(16*x253 + x265 + x267) + x0*(x246 - x258 - x260 + x270) + x0*(x247 + 4*x253 + x261 - x271) + x0*(-x252 - 24*x253 + x262 + x264) + x259 + x269;
strain_terms[30] = x0*(16*x263 + x275 + x277) + x0*(x254 - x268 - x270 + x280) + x0*(x255 + 4*x263 + x271 - x281) + x0*(-x262 - 24*x263 + x272 + x274) + x269 + x279;
strain_terms[31] = x0*(16*x273 + x285 + x287) + x0*(x264 - x278 - x280 + x290) + x0*(x265 + 4*x273 + x281 - x291) + x0*(-x272 - 24*x273 + x282 + x284) + x279 + x289;
strain_terms[32] = x0*(16*x283 + x295 + x297) + x0*(x274 - x288 - x290 + x300) + x0*(x275 + 4*x283 + x291 - x301) + x0*(-x282 - 24*x283 + x292 + x294) + x289 + x299;
strain_terms[33] = x0*(16*x293 + x305 + x307) + x0*(x284 - x298 - x300 + x310) + x0*(x285 + 4*x293 + x301 - x311) + x0*(-x292 - 24*x293 + x302 + x304) + x299 + x309;
strain_terms[34] = x0*(16*x303 + 8*x313 + x315) + x0*(x294 - x308 - x310 + x318) + x0*(x295 + 4*x303 + x311 - x319) + x0*(-x302 - 24*x303 + x312 - 18*x313) + x309 + x317;
strain_terms[35] = x0*(-x312 - 24*x313) + x0*(16*x313 + x314) + x0*(x314 + x316) + x0*(p1_b*x240 + x304 - x316 - x318) + x0*(-p1_b*x242 + x305 + 4*x313 + x319) + x317;
strain_terms[36] = x0*(x320 - x322) + x0*(4*x321 - x323) + x0*(x322 - x324) + x0*(16*x321 + x330 + x332) + x0*(-q1_b*x228 - 24*x321 + x325 + x327) + x331;
strain_terms[37] = x0*(16*x326 + x340 + x342) + x0*(-x320 - 18*x321 - x328 + x333) + x0*(8*x321 + x323 + 4*x326 - x334) + x0*(-x325 - 24*x326 + x335 + x337) + x331 + x341;
strain_terms[38] = x0*(16*x336 + x350 + x352) + x0*(x327 - x333 - x338 + x343) + x0*(x332 + x334 + 4*x336 - x344) + x0*(-x335 - 24*x336 + x345 + x347) + x341 + x351;
strain_terms[39] = x0*(16*x346 + x360 + x362) + x0*(x337 - x343 - x348 + x353) + x0*(x342 + x344 + 4*x346 - x354) + x0*(-x345 - 24*x346 + x355 + x357) + x351 + x361;
strain_terms[40] = x0*(16*x356 + x370 + x372) + x0*(x347 - x353 - x358 + x363) + x0*(x352 + x354 + 4*x356 - x364) + x0*(-x355 - 24*x356 + x365 + x367) + x361 + x371;
strain_terms[41] = x0*(16*x366 + x380 + x382) + x0*(x357 - x363 - x368 + x373) + x0*(x362 + x364 + 4*x366 - x374) + x0*(-x365 - 24*x366 + x375 + x377) + x371 + x381;
strain_terms[42] = x0*(16*x376 + x390 + x392) + x0*(x367 - x373 - x378 + x383) + x0*(x372 + x374 + 4*x376 - x384) + x0*(-x375 - 24*x376 + x385 + x387) + x381 + x391;
strain_terms[43] = x0*(16*x386 + x400 + x402) + x0*(x377 - x383 - x388 + x393) + x0*(x382 + x384 + 4*x386 - x394) + x0*(-x385 - 24*x386 + x395 + x397) + x391 + x401;
strain_terms[44] = x0*(16*x396 + 8*x403 + x404) + x0*(x387 - x393 - x398 + x407) + x0*(x392 + x394 + 4*x396 - x408) + x0*(q10_b*x228 - x395 - 24*x396 - 18*x403) + x401 + x406;
strain_terms[45] = x0*(q10_b*x240 + x397 - x405 - x407) + x0*(-q10_b*x242 + x402 + 4*x403 + x408) + x406;
strain_terms[46] = -x412;
strain_terms[47] = x412 - x414;
strain_terms[48] = x414 - x416;
strain_terms[49] = x416 - x418;
strain_terms[50] = x418 - x420;
strain_terms[51] = x420 - x422;
strain_terms[52] = x422 - x424;
strain_terms[53] = x424 - x426;
strain_terms[54] = x426 - x428;
strain_terms[55] = x411*x427 + x428;
strain_terms[56] = x411*x429 - x431;
strain_terms[57] = x431 - x433;
strain_terms[58] = x433 - x435;
strain_terms[59] = x435 - x437;
strain_terms[60] = x437 - x439;
strain_terms[61] = x439 - x441;
strain_terms[62] = x441 - x443;
strain_terms[63] = x443 - x445;
strain_terms[64] = x445 - x446;
strain_terms[65] = x446;
strain_terms[66] = x0*(-x447 + x448 - x449 - x450) + x0*(x451 + x453 + x454 + x455) + x0*(x454 + x456 + x458 + x459);
strain_terms[67] = x0*(x447 + x449 + x450 + x462) + x0*(-x451 + x452 - x455 + x460) + x0*(x452 + x459 + x467 + x468) + x0*(-x456 + x457 + x460 + x461) + x0*(x457 + x459 + x470 + x471) + x0*(x462 + x463 - x464 - x465);
strain_terms[68] = x0*(x448 + x464 + x465 + x473) + x0*(x453 + x461 + x466 - x468) + x0*(x458 + x461 + x469 + x482) + x0*(x466 + x471 + x477 + x478) + x0*(x469 + x471 + x480 + x481) + x0*(x472 + x473 - x474 - x475);
strain_terms[69] = x0*(x463 + x474 + x475 + x484) + x0*(x467 + x476 - x478 + x482) + x0*(x470 + x479 + x482 + x493) + x0*(x476 + x481 + x488 + x489) + x0*(x479 + x481 + x491 + x492) + x0*(x483 + x484 - x485 - x486);
strain_terms[70] = x0*(x472 + x485 + x486 + x495) + x0*(x477 + x487 - x489 + x493) + x0*(x480 + x490 + x493 + x504) + x0*(x487 + x492 + x499 + x500) + x0*(x490 + x492 + x502 + x503) + x0*(x494 + x495 - x496 - x497);
strain_terms[71] = x0*(x483 + x496 + x497 + x506) + x0*(x488 + x498 - x500 + x504) + x0*(x491 + x501 + x504 + x515) + x0*(x498 + x503 + x510 + x511) + x0*(x501 + x503 + x513 + x514) + x0*(x505 + x506 - x507 - x508);
strain_terms[72] = x0*(x494 + x507 + x508 + x517) + x0*(x499 + x509 - x511 + x515) + x0*(x502 + x512 + x515 + x526) + x0*(x509 + x514 + x521 + x522) + x0*(x512 + x514 + x524 + x525) + x0*(x516 + x517 - x518 - x519);
strain_terms[73] = x0*(x505 + x518 + x519 + x528) + x0*(x510 + x520 - x522 + x526) + x0*(x513 + x523 + x526 + x537) + x0*(x520 + x525 + x532 + x533) + x0*(x523 + x525 + x535 + x536) + x0*(x527 + x528 - x529 - x530);
strain_terms[74] = x0*(x516 + x529 + x530 + x539) + x0*(x521 + x531 - x533 + x537) + x0*(x524 + x534 + x537 + x546) + x0*(x531 + x536 - x542 + x543) + x0*(x534 + x536 - x544 + x545) + x0*(x538 + x539 - x540 - x541);
strain_terms[75] = x0*(x542 + x545) + x0*(x544 + x545) + x0*(-p1_i_dot*x228 + x547) + x0*(x527 + x540 + x541 + x547) + x0*(x532 + x542 - x543 + x546) + x0*(x535 + x544 - x545 + x546);
strain_terms[76] = x0*(x548 + x550) + x0*(q1_i_dot*x240 + x553) + x0*(-q1_i_dot*x242 + x551) + x0*(x548 + x549 + x561 + x562) + x0*(x549 + x551 + x558 + x559) + x0*(x553 + x554 - x555 - x556);
strain_terms[77] = x0*(-x548 + x550 + x560 + x563) + x0*(x550 - x551 + x557 - x559) + x0*(x552 + x555 + x556 + x564) + x0*(x557 + x562 + x569 + x570) + x0*(x560 + x562 + x572 + x573) + x0*(x564 + x565 - x566 - x567);
strain_terms[78] = x0*(x554 + x566 + x567 + x575) + x0*(x558 + x563 + x568 - x570) + x0*(x561 + x563 + x571 + x574) + x0*(x568 + x573 + x580 + x581) + x0*(x571 + x573 + x583 + x584) + x0*(x575 + x576 - x577 - x578);
strain_terms[79] = x0*(x565 + x577 + x578 + x586) + x0*(x569 + x574 + x579 - x581) + x0*(x572 + x574 + x582 + x585) + x0*(x579 + x584 + x591 + x592) + x0*(x582 + x584 + x594 + x595) + x0*(x586 + x587 - x588 - x589);
strain_terms[80] = x0*(x576 + x588 + x589 + x597) + x0*(x580 + x585 + x590 - x592) + x0*(x583 + x585 + x593 + x596) + x0*(x590 + x595 + x602 + x603) + x0*(x593 + x595 + x605 + x606) + x0*(x597 + x598 - x599 - x600);
strain_terms[81] = x0*(x587 + x599 + x600 + x608) + x0*(x591 + x596 + x601 - x603) + x0*(x594 + x596 + x604 + x607) + x0*(x601 + x606 + x613 + x614) + x0*(x604 + x606 + x616 + x617) + x0*(x608 + x609 - x610 - x611);
strain_terms[82] = x0*(x598 + x610 + x611 + x619) + x0*(x602 + x607 + x612 - x614) + x0*(x605 + x607 + x615 + x618) + x0*(x612 + x617 + x624 + x625) + x0*(x615 + x617 + x627 + x628) + x0*(x619 + x620 - x621 - x622);
strain_terms[83] = x0*(x609 + x621 + x622 + x630) + x0*(x613 + x618 + x623 - x625) + x0*(x616 + x618 + x626 + x629) + x0*(x623 + x628 + x635 + x636) + x0*(x626 + x628 + x638 + x639) + x0*(x630 + x631 - x632 - x633);
strain_terms[84] = x0*(x620 + x632 + x633 + x641) + x0*(x624 + x629 + x634 - x636) + x0*(x627 + x629 + x637 + x648) + x0*(x634 + x639 - x644 + x645) + x0*(x637 + x639 - x646 + x647) + x0*(x640 + x641 - x642 - x643);
strain_terms[85] = x0*(x631 - x640 + x642 + x643) + x0*(x635 + x644 - x645 + x648) + x0*(x638 + x646 - x647 + x648);
strain_terms[86] = x0*(16*x650 + x655 + x657) + x0*(-p10_i*x228 + x649 - 24*x650 + x652) + x656;
strain_terms[87] = x0*(16*x651 + x663 + x665) + x0*(-x649 - 24*x651 + x660 + x662) + x0*(-p10_i*x240 - 18*x650 - x653 + x658) + x0*(p10_i*x242 + 8*x650 + 4*x651 - x659) + x656 + x667;
strain_terms[88] = x0*(16*x661 + x671 + x673) + x0*(x652 - x658 - x666 + x676) + x0*(x657 + x659 + 4*x661 - x677) + x0*(-x660 - 24*x661 + x668 + x670) + x667 + x675;
strain_terms[89] = x0*(16*x669 + x681 + x683) + x0*(x662 - x674 - x676 + x686) + x0*(x663 + 4*x669 + x677 - x687) + x0*(-x668 - 24*x669 + x678 + x680) + x675 + x685;
strain_terms[90] = x0*(16*x679 + x691 + x693) + x0*(x670 - x684 - x686 + x696) + x0*(x671 + 4*x679 + x687 - x697) + x0*(-x678 - 24*x679 + x688 + x690) + x685 + x695;
strain_terms[91] = x0*(16*x689 + x701 + x703) + x0*(x680 - x694 - x696 + x706) + x0*(x681 + 4*x689 + x697 - x707) + x0*(-x688 - 24*x689 + x698 + x700) + x695 + x705;
strain_terms[92] = x0*(16*x699 + x711 + x713) + x0*(x690 - x704 - x706 + x716) + x0*(x691 + 4*x699 + x707 - x717) + x0*(-x698 - 24*x699 + x708 + x710) + x705 + x715;
strain_terms[93] = x0*(16*x709 + x721 + x723) + x0*(x700 - x714 - x716 + x726) + x0*(x701 + 4*x709 + x717 - x727) + x0*(-x708 - 24*x709 + x718 + x720) + x715 + x725;
strain_terms[94] = x0*(16*x719 + 8*x729 + x731) + x0*(x710 - x724 - x726 + x734) + x0*(x711 + 4*x719 + x727 - x735) + x0*(-x718 - 24*x719 + x728 - 18*x729) + x725 + x733;
strain_terms[95] = x0*(-x728 - 24*x729) + x0*(16*x729 + x730) + x0*(x730 + x732) + x0*(p1_i*x240 + x720 - x732 - x734) + x0*(-p1_i*x242 + x721 + 4*x729 + x735) + x733;
strain_terms[96] = x0*(x736 - x738) + x0*(4*x737 - x739) + x0*(x738 - x740) + x0*(16*x737 + x746 + x748) + x0*(-q1_i*x228 - 24*x737 + x741 + x743) + x747;
strain_terms[97] = x0*(16*x742 + x756 + x758) + x0*(-x736 - 18*x737 - x744 + x749) + x0*(8*x737 + x739 + 4*x742 - x750) + x0*(-x741 - 24*x742 + x751 + x753) + x747 + x757;
strain_terms[98] = x0*(16*x752 + x766 + x768) + x0*(x743 - x749 - x754 + x759) + x0*(x748 + x750 + 4*x752 - x760) + x0*(-x751 - 24*x752 + x761 + x763) + x757 + x767;
strain_terms[99] = x0*(16*x762 + x776 + x778) + x0*(x753 - x759 - x764 + x769) + x0*(x758 + x760 + 4*x762 - x770) + x0*(-x761 - 24*x762 + x771 + x773) + x767 + x777;
strain_terms[100] = x0*(16*x772 + x786 + x788) + x0*(x763 - x769 - x774 + x779) + x0*(x768 + x770 + 4*x772 - x780) + x0*(-x771 - 24*x772 + x781 + x783) + x777 + x787;
strain_terms[101] = x0*(16*x782 + x796 + x798) + x0*(x773 - x779 - x784 + x789) + x0*(x778 + x780 + 4*x782 - x790) + x0*(-x781 - 24*x782 + x791 + x793) + x787 + x797;
strain_terms[102] = x0*(16*x792 + x806 + x808) + x0*(x783 - x789 - x794 + x799) + x0*(x788 + x790 + 4*x792 - x800) + x0*(-x791 - 24*x792 + x801 + x803) + x797 + x807;
strain_terms[103] = x0*(16*x802 + x816 + x818) + x0*(x793 - x799 - x804 + x809) + x0*(x798 + x800 + 4*x802 - x810) + x0*(-x801 - 24*x802 + x811 + x813) + x807 + x817;
strain_terms[104] = x0*(16*x812 + 8*x819 + x820) + x0*(x803 - x809 - x814 + x823) + x0*(x808 + x810 + 4*x812 - x824) + x0*(q10_i*x228 - x811 - 24*x812 - 18*x819) + x817 + x822;
strain_terms[105] = x0*(q10_i*x240 + x813 - x821 - x823) + x0*(-q10_i*x242 + x818 + 4*x819 + x824) + x822;